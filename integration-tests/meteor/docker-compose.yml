version: "3"
services:
  test:
    build:
      context: ../..
      dockerfile: Dockerfile.integration
    depends_on:
      oplogtoredis:
        condition: service_started
      mongo:
        condition: service_healthy
      redis:
        condition: service_started
    command:
      - /wait-for.sh
      - --timeout=600
      - testapp1:8080
      - '--'
      - /wait-for.sh
      - --timeout=600
      - testapp2:8080
      - '--'
      - /wait-for.sh
      - --timeout=600
      - oplogtoredis:9000
      - '--'
      - sh
      - -c
      - cd /integration/meteor && /integration/bin/meteor.test -test.timeout 5m -test.v
    environment:
      - MONGO_URL=mongodb://mongo/tests
      - REDIS_URL=redis://redis
      - TESTAPP_1_URL=ws://testapp1:8080/websocket
      - TESTAPP_2_URL=ws://testapp2:8080/websocket

  oplogtoredis:
    build: ../..
    environment:
      - OTR_MONGO_URL=mongodb://mongo/tests
      - OTR_REDIS_URL=redis://redis
      - OTR_LOG_DEBUG=true
      - OTR_OPLOG_V2_EXTRACT_SUBFIELD_CHANGES=true
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ../../scripts/wait-for.sh:/wait-for.sh
    command:
      - /wait-for.sh
      - --timeout=600
      - testapp1:8080
      - '--'
      - /wait-for.sh
      - --timeout=600
      - testapp2:8080
      - '--'
      - /bin/oplogtoredis

  mongo:
    image: mongo:5.0.19
    command: "mongod --replSet myapp --port 27017"
    logging:
      driver: none
    healthcheck:
      test: test $$(echo "rs.initiate({_id:'myapp',members:[{_id:0,host:\"mongo:27017\"}]}).ok || rs.status().ok" | mongo --port 27017 --quiet) -eq 1
      interval: 10s
      start_period: 10s
    volumes:
      - mongo_data:/data/db

  redis:
    image: redis:6.0
    logging:
      driver: none

  testapp1: &meteor
    build: ../../testapp
    environment:
      - MONGO_URL_NO_RS=mongodb://mongo/tests
      - MONGO_URL=mongodb://mongo/tests?replicaSet=myapp
      - MONGO_OPLOG_URL=mongodb://mongo/local?replicaSet=myapp
      - ROOT_URL=http://testapp1:8080
    volumes:
      - ../../scripts/wait-for.sh:/wait-for.sh
      - ./meteor-entry.sh:/meteor-entry.sh
      - ./meteor-settings.json:/meteor-settings.json
    command:
      - /wait-for.sh
      - --timeout=60
      - mongo:27017
      - '--'
      - /wait-for.sh
      - --timeout=60
      - redis:6379
      - '--'
      - /meteor-entry.sh
  testapp2: *meteor

volumes:
  mongo_data:
